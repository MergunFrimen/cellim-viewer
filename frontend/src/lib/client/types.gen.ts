// This file is auto-generated by @hey-api/openapi-ts

export type EntryCreateRequest = {
  volseg_entry_id: string;
  name: string;
  description?: string | null;
  is_public?: boolean | null;
};

export type EntryDetailsResponse = {
  response_model?: string;
  id: string;
  created_at: string;
  updated_at: string;
  name: string;
  description?: string | null;
  thumbnail_url?: string | null;
  is_public: boolean;
  volseg_entry_id: string;
};

export type EntryUpdateRequest = {
  name?: string | null;
  description?: string | null;
  is_public?: boolean | null;
};

export type HttpValidationError = {
  detail?: Array<ValidationError>;
};

export type PaginatedResponseEntryDetailsResponse = {
  response_model?: string;
  page: number;
  per_page: number;
  total_pages: number;
  total_items: number;
  items: Array<EntryDetailsResponse>;
};

export type ShareLinkResponse = {
  response_model?: string;
  id: string;
  created_at: string;
  updated_at: string;
  is_editable: boolean;
  is_active: boolean;
};

export type ShareLinkUpdateRequest = {
  is_editable?: boolean | null;
  is_active?: boolean | null;
};

export type UploadFileRequest = {
  file: Blob | File;
};

export type UserResponse = {
  response_model?: string;
  id: string;
  created_at: string;
  updated_at: string;
  openid: string;
  email: string;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type ViewCreateRequest = {
  name: string;
  description?: string | null;
  /**
   * Mol* state file (.molj file)
   */
  snapshot_json: Blob | File;
  /**
   * Thumbnail image for view
   */
  thumbnail_image?: (Blob | File) | null;
};

export type ViewResponse = {
  response_model?: string;
  id: string;
  created_at: string;
  updated_at: string;
  name: string;
  description?: string | null;
  thumbnail_url: string | null;
  snapshot_url: string;
};

export type ViewUpdateRequest = {
  name?: string | null;
  description?: string | null;
};

export type VolsegEntryResponse = {
  response_model?: string;
  id: string;
  created_at: string;
  updated_at: string;
  db_name: string;
  entry_id: string;
  is_public: boolean;
};

export type VolsegUploadEntry = {
  db_name: string;
  entry_id: string;
  is_public?: boolean | null;
  /**
   * Entry annotations
   */
  annotations: Blob | File;
  /**
   * Entry metadata
   */
  metadata: Blob | File;
  /**
   * Entry data (zip)
   */
  data: Blob | File;
};

export type EntriesListPublicEntriesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Keywords to search by in entry titles and descriptions.
     */
    search_term?: string | null;
    page?: number;
    per_page?: number;
  };
  url: "/api/v1/entries";
};

export type EntriesListPublicEntriesErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type EntriesListPublicEntriesError =
  EntriesListPublicEntriesErrors[keyof EntriesListPublicEntriesErrors];

export type EntriesListPublicEntriesResponses = {
  /**
   * Successful Response
   */
  200: PaginatedResponseEntryDetailsResponse;
};

export type EntriesListPublicEntriesResponse =
  EntriesListPublicEntriesResponses[keyof EntriesListPublicEntriesResponses];

export type EntriesCreateEntryData = {
  body: EntryCreateRequest;
  path?: never;
  query?: never;
  url: "/api/v1/entries";
};

export type EntriesCreateEntryErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type EntriesCreateEntryError =
  EntriesCreateEntryErrors[keyof EntriesCreateEntryErrors];

export type EntriesCreateEntryResponses = {
  /**
   * Successful Response
   */
  201: EntryDetailsResponse;
};

export type EntriesCreateEntryResponse =
  EntriesCreateEntryResponses[keyof EntriesCreateEntryResponses];

export type EntriesDeleteEntryData = {
  body?: never;
  path: {
    entry_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}";
};

export type EntriesDeleteEntryErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type EntriesDeleteEntryError =
  EntriesDeleteEntryErrors[keyof EntriesDeleteEntryErrors];

export type EntriesDeleteEntryResponses = {
  /**
   * Successful Response
   */
  200: string;
};

export type EntriesDeleteEntryResponse =
  EntriesDeleteEntryResponses[keyof EntriesDeleteEntryResponses];

export type EntriesGetEntryByIdData = {
  body?: never;
  path: {
    entry_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}";
};

export type EntriesGetEntryByIdErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type EntriesGetEntryByIdError =
  EntriesGetEntryByIdErrors[keyof EntriesGetEntryByIdErrors];

export type EntriesGetEntryByIdResponses = {
  /**
   * Successful Response
   */
  200: EntryDetailsResponse;
};

export type EntriesGetEntryByIdResponse =
  EntriesGetEntryByIdResponses[keyof EntriesGetEntryByIdResponses];

export type EntriesUpdateEntryData = {
  body: EntryUpdateRequest;
  path: {
    entry_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}";
};

export type EntriesUpdateEntryErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type EntriesUpdateEntryError =
  EntriesUpdateEntryErrors[keyof EntriesUpdateEntryErrors];

export type EntriesUpdateEntryResponses = {
  /**
   * Successful Response
   */
  200: EntryDetailsResponse;
};

export type EntriesUpdateEntryResponse =
  EntriesUpdateEntryResponses[keyof EntriesUpdateEntryResponses];

export type EntriesGetEntryByShareLinkData = {
  body?: never;
  path: {
    share_link_id: string;
  };
  query?: never;
  url: "/api/v1/entries/share/{share_link_id}";
};

export type EntriesGetEntryByShareLinkErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type EntriesGetEntryByShareLinkError =
  EntriesGetEntryByShareLinkErrors[keyof EntriesGetEntryByShareLinkErrors];

export type EntriesGetEntryByShareLinkResponses = {
  /**
   * Successful Response
   */
  200: EntryDetailsResponse;
};

export type EntriesGetEntryByShareLinkResponse =
  EntriesGetEntryByShareLinkResponses[keyof EntriesGetEntryByShareLinkResponses];

export type EntriesGetEntryShareLinkData = {
  body?: never;
  path: {
    entry_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}/share_link";
};

export type EntriesGetEntryShareLinkErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type EntriesGetEntryShareLinkError =
  EntriesGetEntryShareLinkErrors[keyof EntriesGetEntryShareLinkErrors];

export type EntriesGetEntryShareLinkResponses = {
  /**
   * Successful Response
   */
  200: ShareLinkResponse;
};

export type EntriesGetEntryShareLinkResponse =
  EntriesGetEntryShareLinkResponses[keyof EntriesGetEntryShareLinkResponses];

export type ViewsListViewsForEntryData = {
  body?: never;
  path: {
    entry_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}/views";
};

export type ViewsListViewsForEntryErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ViewsListViewsForEntryError =
  ViewsListViewsForEntryErrors[keyof ViewsListViewsForEntryErrors];

export type ViewsListViewsForEntryResponses = {
  /**
   * Successful Response
   */
  200: Array<ViewResponse>;
};

export type ViewsListViewsForEntryResponse =
  ViewsListViewsForEntryResponses[keyof ViewsListViewsForEntryResponses];

export type ViewsCreateViewData = {
  body: ViewCreateRequest;
  path: {
    entry_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}/views";
};

export type ViewsCreateViewErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ViewsCreateViewError =
  ViewsCreateViewErrors[keyof ViewsCreateViewErrors];

export type ViewsCreateViewResponses = {
  /**
   * Successful Response
   */
  201: ViewResponse;
};

export type ViewsCreateViewResponse =
  ViewsCreateViewResponses[keyof ViewsCreateViewResponses];

export type ViewsDeleteViewData = {
  body?: never;
  path: {
    view_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}/views/{view_id}";
};

export type ViewsDeleteViewErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ViewsDeleteViewError =
  ViewsDeleteViewErrors[keyof ViewsDeleteViewErrors];

export type ViewsDeleteViewResponses = {
  /**
   * Successful Response
   */
  200: string;
};

export type ViewsDeleteViewResponse =
  ViewsDeleteViewResponses[keyof ViewsDeleteViewResponses];

export type ViewsGetViewByIdData = {
  body?: never;
  path: {
    entry_id: string;
    view_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}/views/{view_id}";
};

export type ViewsGetViewByIdErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ViewsGetViewByIdError =
  ViewsGetViewByIdErrors[keyof ViewsGetViewByIdErrors];

export type ViewsGetViewByIdResponses = {
  /**
   * Successful Response
   */
  200: ViewResponse;
};

export type ViewsGetViewByIdResponse =
  ViewsGetViewByIdResponses[keyof ViewsGetViewByIdResponses];

export type ViewsUpdateViewData = {
  body: ViewUpdateRequest;
  path: {
    entry_id: string;
    view_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}/views/{view_id}";
};

export type ViewsUpdateViewErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ViewsUpdateViewError =
  ViewsUpdateViewErrors[keyof ViewsUpdateViewErrors];

export type ViewsUpdateViewResponses = {
  /**
   * Successful Response
   */
  200: ViewResponse;
};

export type ViewsUpdateViewResponse =
  ViewsUpdateViewResponses[keyof ViewsUpdateViewResponses];

export type ViewsGetViewSnapshotData = {
  body?: never;
  path: {
    entry_id: string;
    view_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}/views/{view_id}/snapshot";
};

export type ViewsGetViewSnapshotErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ViewsGetViewSnapshotError =
  ViewsGetViewSnapshotErrors[keyof ViewsGetViewSnapshotErrors];

export type ViewsGetViewSnapshotResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type ViewsGetViewThumbnailImageData = {
  body?: never;
  path: {
    entry_id: string;
    view_id: string;
  };
  query?: never;
  url: "/api/v1/entries/{entry_id}/views/{view_id}/thumbnail";
};

export type ViewsGetViewThumbnailImageErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ViewsGetViewThumbnailImageError =
  ViewsGetViewThumbnailImageErrors[keyof ViewsGetViewThumbnailImageErrors];

export type ViewsGetViewThumbnailImageResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type MeListEntriesForUserData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Keywords to search by in entry titles and descriptions.
     */
    search_term?: string | null;
    page?: number;
    per_page?: number;
  };
  url: "/api/v1/me/entries";
};

export type MeListEntriesForUserErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type MeListEntriesForUserError =
  MeListEntriesForUserErrors[keyof MeListEntriesForUserErrors];

export type MeListEntriesForUserResponses = {
  /**
   * Successful Response
   */
  200: PaginatedResponseEntryDetailsResponse;
};

export type MeListEntriesForUserResponse =
  MeListEntriesForUserResponses[keyof MeListEntriesForUserResponses];

export type MeListVolsegEntriesForUserData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/me/volseg";
};

export type MeListVolsegEntriesForUserResponses = {
  /**
   * Successful Response
   */
  200: Array<VolsegEntryResponse>;
};

export type MeListVolsegEntriesForUserResponse =
  MeListVolsegEntriesForUserResponses[keyof MeListVolsegEntriesForUserResponses];

export type ShareLinksGetShareLinkData = {
  body?: never;
  path: {
    share_link_id: string;
  };
  query?: never;
  url: "/api/v1/share_links/{share_link_id}";
};

export type ShareLinksGetShareLinkErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ShareLinksGetShareLinkError =
  ShareLinksGetShareLinkErrors[keyof ShareLinksGetShareLinkErrors];

export type ShareLinksGetShareLinkResponses = {
  /**
   * Successful Response
   */
  200: ShareLinkResponse;
};

export type ShareLinksGetShareLinkResponse =
  ShareLinksGetShareLinkResponses[keyof ShareLinksGetShareLinkResponses];

export type ShareLinksUpdateShareLinkData = {
  body: ShareLinkUpdateRequest;
  path: {
    share_link_id: string;
  };
  query?: never;
  url: "/api/v1/share_links/{share_link_id}";
};

export type ShareLinksUpdateShareLinkErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type ShareLinksUpdateShareLinkError =
  ShareLinksUpdateShareLinkErrors[keyof ShareLinksUpdateShareLinkErrors];

export type ShareLinksUpdateShareLinkResponses = {
  /**
   * Successful Response
   */
  200: ShareLinkResponse;
};

export type ShareLinksUpdateShareLinkResponse =
  ShareLinksUpdateShareLinkResponses[keyof ShareLinksUpdateShareLinkResponses];

export type AuthLoginUserData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/auth/login/user";
};

export type AuthLoginUserResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type AuthLogoutData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/auth/logout";
};

export type AuthLogoutResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type AuthReadUsersMeData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/auth/me/user";
};

export type AuthReadUsersMeResponses = {
  /**
   * Successful Response
   */
  200: UserResponse;
};

export type AuthReadUsersMeResponse =
  AuthReadUsersMeResponses[keyof AuthReadUsersMeResponses];

export type AuthGetUsersTokenData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/auth/me/token";
};

export type AuthGetUsersTokenResponses = {
  /**
   * Successful Response
   */
  200: string;
};

export type AuthGetUsersTokenResponse =
  AuthGetUsersTokenResponses[keyof AuthGetUsersTokenResponses];

export type AuthVerifyAuthData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/auth/verify";
};

export type AuthVerifyAuthResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type TestUploadFileData = {
  body: UploadFileRequest;
  path?: never;
  query?: never;
  url: "/api/v1/test/upload";
};

export type TestUploadFileErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type TestUploadFileError =
  TestUploadFileErrors[keyof TestUploadFileErrors];

export type TestUploadFileResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type VolsegEntriesListPublicEntriesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/volseg";
};

export type VolsegEntriesListPublicEntriesResponses = {
  /**
   * Successful Response
   */
  200: Array<VolsegEntryResponse>;
};

export type VolsegEntriesListPublicEntriesResponse =
  VolsegEntriesListPublicEntriesResponses[keyof VolsegEntriesListPublicEntriesResponses];

export type VolsegEntriesUploadEntryData = {
  body: VolsegUploadEntry;
  path?: never;
  query?: never;
  url: "/api/v1/volseg";
};

export type VolsegEntriesUploadEntryErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type VolsegEntriesUploadEntryError =
  VolsegEntriesUploadEntryErrors[keyof VolsegEntriesUploadEntryErrors];

export type VolsegEntriesUploadEntryResponses = {
  /**
   * Successful Response
   */
  200: VolsegEntryResponse;
};

export type VolsegEntriesUploadEntryResponse =
  VolsegEntriesUploadEntryResponses[keyof VolsegEntriesUploadEntryResponses];

export type VolsegEntriesDeleteViewData = {
  body?: never;
  path: {
    volseg_entry_id: string;
  };
  query?: never;
  url: "/api/v1/volseg/{volseg_entry_id}";
};

export type VolsegEntriesDeleteViewErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type VolsegEntriesDeleteViewError =
  VolsegEntriesDeleteViewErrors[keyof VolsegEntriesDeleteViewErrors];

export type VolsegEntriesDeleteViewResponses = {
  /**
   * Successful Response
   */
  200: string;
};

export type VolsegEntriesDeleteViewResponse =
  VolsegEntriesDeleteViewResponses[keyof VolsegEntriesDeleteViewResponses];

export type VolsegEntriesGetEntryByIdData = {
  body?: never;
  path: {
    volseg_entry_id: string;
  };
  query?: never;
  url: "/api/v1/volseg/{volseg_entry_id}";
};

export type VolsegEntriesGetEntryByIdErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type VolsegEntriesGetEntryByIdError =
  VolsegEntriesGetEntryByIdErrors[keyof VolsegEntriesGetEntryByIdErrors];

export type VolsegEntriesGetEntryByIdResponses = {
  /**
   * Successful Response
   */
  200: VolsegEntryResponse;
};

export type VolsegEntriesGetEntryByIdResponse =
  VolsegEntriesGetEntryByIdResponses[keyof VolsegEntriesGetEntryByIdResponses];

export type ClientOptions = {
  baseUrl: "http://localhost:8000" | (string & {});
};
