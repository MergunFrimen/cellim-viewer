// This file is auto-generated by @hey-api/openapi-ts

export const EntryCreateRequestSchema = {
  properties: {
    volseg_entry_id: {
      type: "string",
      format: "uuid",
    },
    name: {
      type: "string",
      maxLength: 255,
      minLength: 1,
      examples: ["Entry Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      examples: ["Markdown description."],
    },
    is_public: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
      default: false,
    },
  },
  additionalProperties: false,
  type: "object",
  required: ["volseg_entry_id", "name"],
} as const;

export const EntryDetailsResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      default: "",
    },
    id: {
      type: "string",
      format: "uuid",
      examples: ["6cfec811-c860-4727-a0ba-a6482b8d29cc"],
    },
    created_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    name: {
      type: "string",
      maxLength: 255,
      examples: ["Entry Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      examples: ["Markdown description."],
    },
    thumbnail_url: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      examples: ["URL for entry thumbnail preview"],
    },
    is_public: {
      type: "boolean",
    },
    volseg_entry_id: {
      type: "string",
      format: "uuid",
    },
  },
  type: "object",
  required: [
    "id",
    "created_at",
    "updated_at",
    "name",
    "is_public",
    "volseg_entry_id",
  ],
} as const;

export const EntryUpdateRequestSchema = {
  properties: {
    name: {
      anyOf: [
        {
          type: "string",
          maxLength: 255,
        },
        {
          type: "null",
        },
      ],
      examples: ["Entry Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      examples: ["Markdown description."],
    },
    is_public: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
    },
  },
  additionalProperties: false,
  type: "object",
} as const;

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: "#/components/schemas/ValidationError",
      },
      type: "array",
    },
  },
  type: "object",
} as const;

export const PaginatedResponse_EntryDetailsResponse_Schema = {
  properties: {
    response_model: {
      type: "string",
      default: "",
    },
    page: {
      type: "integer",
      minimum: 1,
    },
    per_page: {
      type: "integer",
      maximum: 100,
      minimum: 1,
    },
    total_pages: {
      type: "integer",
    },
    total_items: {
      type: "integer",
    },
    items: {
      items: {
        $ref: "#/components/schemas/EntryDetailsResponse",
      },
      type: "array",
    },
  },
  type: "object",
  required: ["page", "per_page", "total_pages", "total_items", "items"],
} as const;

export const ShareLinkResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      default: "",
    },
    id: {
      type: "string",
      format: "uuid",
      examples: ["6cfec811-c860-4727-a0ba-a6482b8d29cc"],
    },
    created_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    is_editable: {
      type: "boolean",
    },
    is_active: {
      type: "boolean",
    },
  },
  type: "object",
  required: ["id", "created_at", "updated_at", "is_editable", "is_active"],
} as const;

export const ShareLinkUpdateRequestSchema = {
  properties: {
    is_editable: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
    },
    is_active: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
    },
  },
  additionalProperties: false,
  type: "object",
} as const;

export const UploadFileRequestSchema = {
  properties: {
    file: {
      type: "string",
      format: "binary",
    },
  },
  additionalProperties: false,
  type: "object",
  required: ["file"],
} as const;

export const UserResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      default: "",
    },
    id: {
      type: "string",
      format: "uuid",
      examples: ["6cfec811-c860-4727-a0ba-a6482b8d29cc"],
    },
    created_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    openid: {
      type: "string",
      format: "uuid",
    },
    email: {
      type: "string",
    },
  },
  type: "object",
  required: ["id", "created_at", "updated_at", "openid", "email"],
} as const;

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: "string",
          },
          {
            type: "integer",
          },
        ],
      },
      type: "array",
    },
    msg: {
      type: "string",
    },
    type: {
      type: "string",
    },
  },
  type: "object",
  required: ["loc", "msg", "type"],
} as const;

export const ViewCreateRequestSchema = {
  properties: {
    name: {
      type: "string",
      maxLength: 255,
      examples: ["View Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
          maxLength: 255,
        },
        {
          type: "null",
        },
      ],
      examples: ["View Description"],
    },
    snapshot_json: {
      type: "string",
      format: "binary",
    },
    thumbnail_image: {
      anyOf: [
        {
          type: "string",
          format: "binary",
        },
        {
          type: "null",
        },
      ],
    },
    is_thumbnail: {
      type: "boolean",
      default: false,
    },
  },
  additionalProperties: false,
  type: "object",
  required: ["name", "snapshot_json"],
} as const;

export const ViewResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      default: "",
    },
    id: {
      type: "string",
      format: "uuid",
      examples: ["6cfec811-c860-4727-a0ba-a6482b8d29cc"],
    },
    created_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    name: {
      type: "string",
      maxLength: 255,
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
    },
    thumbnail_url: {
      anyOf: [
        {
          type: "string",
          maxLength: 2083,
        },
        {
          type: "null",
        },
      ],
    },
    snapshot_url: {
      type: "string",
      maxLength: 2083,
    },
    is_thumbnail: {
      type: "boolean",
    },
  },
  type: "object",
  required: [
    "id",
    "created_at",
    "updated_at",
    "name",
    "description",
    "thumbnail_url",
    "snapshot_url",
    "is_thumbnail",
  ],
} as const;

export const ViewUpdateRequestSchema = {
  properties: {
    name: {
      anyOf: [
        {
          type: "string",
          maxLength: 255,
        },
        {
          type: "null",
        },
      ],
      examples: ["View Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
          maxLength: 255,
        },
        {
          type: "null",
        },
      ],
      examples: ["View Description"],
    },
    is_thumbnail: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
    },
  },
  additionalProperties: false,
  type: "object",
} as const;

export const VolsegEntryResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      default: "",
    },
    id: {
      type: "string",
      format: "uuid",
      examples: ["6cfec811-c860-4727-a0ba-a6482b8d29cc"],
    },
    created_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      examples: ["2025-04-24 09:46:15.895023+00:00"],
    },
    db_name: {
      type: "string",
      maxLength: 255,
      minLength: 1,
      examples: ["emdb"],
    },
    entry_id: {
      type: "string",
      maxLength: 255,
      minLength: 1,
      examples: ["emd-1832"],
    },
    is_public: {
      type: "boolean",
    },
  },
  type: "object",
  required: [
    "id",
    "created_at",
    "updated_at",
    "db_name",
    "entry_id",
    "is_public",
  ],
} as const;

export const VolsegUploadEntrySchema = {
  properties: {
    db_name: {
      type: "string",
      maxLength: 255,
      minLength: 1,
      examples: ["emdb"],
    },
    entry_id: {
      type: "string",
      maxLength: 255,
      minLength: 1,
      examples: ["emd-1832"],
    },
    is_public: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
      default: false,
    },
    annotations: {
      type: "string",
      format: "binary",
    },
    metadata: {
      type: "string",
      format: "binary",
    },
    data: {
      type: "string",
      format: "binary",
    },
  },
  additionalProperties: false,
  type: "object",
  required: ["db_name", "entry_id", "annotations", "metadata", "data"],
} as const;
