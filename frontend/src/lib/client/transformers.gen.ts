// This file is auto-generated by @hey-api/openapi-ts

import type {
  EntriesListEntriesResponse,
  EntriesCreateEntryResponse,
  EntriesListEntriesForUserResponse,
  EntriesUpdateEntryResponse,
  ViewsCreateViewResponse,
  ViewsUpdateViewResponse,
} from "./types.gen";

const publicEntryPreviewResponseSchemaResponseTransformer = (data: any) => {
  data.created_at = new Date(data.created_at);
  data.updated_at = new Date(data.updated_at);
  return data;
};

const paginatedResponsePublicEntryPreviewResponseSchemaResponseTransformer = (
  data: any,
) => {
  data.items = data.items.map((item: any) => {
    return publicEntryPreviewResponseSchemaResponseTransformer(item);
  });
  return data;
};

export const entriesListEntriesResponseTransformer = async (
  data: any,
): Promise<EntriesListEntriesResponse> => {
  data =
    paginatedResponsePublicEntryPreviewResponseSchemaResponseTransformer(data);
  return data;
};

const privateViewResponseSchemaResponseTransformer = (data: any) => {
  data.created_at = new Date(data.created_at);
  data.updated_at = new Date(data.updated_at);
  return data;
};

const privateEntryDetailsResponseSchemaResponseTransformer = (data: any) => {
  data.created_at = new Date(data.created_at);
  data.updated_at = new Date(data.updated_at);
  data.views = data.views.map((item: any) => {
    return privateViewResponseSchemaResponseTransformer(item);
  });
  return data;
};

export const entriesCreateEntryResponseTransformer = async (
  data: any,
): Promise<EntriesCreateEntryResponse> => {
  data = privateEntryDetailsResponseSchemaResponseTransformer(data);
  return data;
};

const paginatedResponsePrivateEntryDetailsResponseSchemaResponseTransformer = (
  data: any,
) => {
  data.items = data.items.map((item: any) => {
    return privateEntryDetailsResponseSchemaResponseTransformer(item);
  });
  return data;
};

export const entriesListEntriesForUserResponseTransformer = async (
  data: any,
): Promise<EntriesListEntriesForUserResponse> => {
  data =
    paginatedResponsePrivateEntryDetailsResponseSchemaResponseTransformer(data);
  return data;
};

export const entriesUpdateEntryResponseTransformer = async (
  data: any,
): Promise<EntriesUpdateEntryResponse> => {
  data = privateEntryDetailsResponseSchemaResponseTransformer(data);
  return data;
};

export const viewsCreateViewResponseTransformer = async (
  data: any,
): Promise<ViewsCreateViewResponse> => {
  data = privateViewResponseSchemaResponseTransformer(data);
  return data;
};

const viewResponseSchemaResponseTransformer = (data: any) => {
  data.created_at = new Date(data.created_at);
  data.updated_at = new Date(data.updated_at);
  return data;
};

export const viewsUpdateViewResponseTransformer = async (
  data: any,
): Promise<ViewsUpdateViewResponse> => {
  data = viewResponseSchemaResponseTransformer(data);
  return data;
};
