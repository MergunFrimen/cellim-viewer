// This file is auto-generated by @hey-api/openapi-ts

export const EntryCreateRequestSchema = {
  properties: {
    name: {
      type: "string",
      maxLength: 255,
      title: "Name",
      examples: ["Entry Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Description",
      examples: ["Markdown description."],
    },
    is_public: {
      type: "boolean",
      title: "Is Public",
      default: false,
    },
  },
  type: "object",
  required: ["name"],
  title: "EntryCreateRequest",
} as const;

export const EntryUpdateRequestSchema = {
  properties: {
    name: {
      anyOf: [
        {
          type: "string",
          maxLength: 255,
        },
        {
          type: "null",
        },
      ],
      title: "Name",
      examples: ["Entry Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Description",
      examples: ["Markdown description."],
    },
    is_public: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
      title: "Is Public",
    },
  },
  type: "object",
  title: "EntryUpdateRequest",
} as const;

export const HTTPValidationErrorSchema = {
  properties: {
    detail: {
      items: {
        $ref: "#/components/schemas/ValidationError",
      },
      type: "array",
      title: "Detail",
    },
  },
  type: "object",
  title: "HTTPValidationError",
} as const;

export const PaginatedResponse_PrivateEntryDetailsResponse_Schema = {
  properties: {
    current_page: {
      type: "integer",
      minimum: 1,
      title: "Current Page",
      default: 1,
    },
    per_page: {
      type: "integer",
      maximum: 100,
      minimum: 1,
      title: "Per Page",
      default: 100,
    },
    total_pages: {
      type: "integer",
      title: "Total Pages",
    },
    total_items: {
      type: "integer",
      title: "Total Items",
    },
    items: {
      items: {
        $ref: "#/components/schemas/PrivateEntryDetailsResponse",
      },
      type: "array",
      title: "Items",
    },
  },
  type: "object",
  required: ["total_pages", "total_items", "items"],
  title: "PaginatedResponse[PrivateEntryDetailsResponse]",
} as const;

export const PaginatedResponse_PublicEntryPreviewResponse_Schema = {
  properties: {
    current_page: {
      type: "integer",
      minimum: 1,
      title: "Current Page",
      default: 1,
    },
    per_page: {
      type: "integer",
      maximum: 100,
      minimum: 1,
      title: "Per Page",
      default: 100,
    },
    total_pages: {
      type: "integer",
      title: "Total Pages",
    },
    total_items: {
      type: "integer",
      title: "Total Items",
    },
    items: {
      items: {
        $ref: "#/components/schemas/PublicEntryPreviewResponse",
      },
      type: "array",
      title: "Items",
    },
  },
  type: "object",
  required: ["total_pages", "total_items", "items"],
  title: "PaginatedResponse[PublicEntryPreviewResponse]",
} as const;

export const PrivateEntryDetailsResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      title: "Response Model",
      default: "",
    },
    id: {
      type: "string",
      format: "uuid4",
      title: "Id",
      examples: ["47c9f759-3b15-4b6c-8b1d-8a22488c084e"],
    },
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
      examples: ["2025-04-22 20:35:58.840457+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      title: "Updated At",
      examples: ["2025-04-22 20:35:58.840547+00:00"],
    },
    name: {
      type: "string",
      maxLength: 255,
      title: "Name",
      examples: ["Entry Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Description",
      examples: ["Markdown description."],
    },
    thumbnail_url: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Thumbnail Url",
      examples: ["URL for entry thumbnail preview"],
    },
    is_public: {
      type: "boolean",
      title: "Is Public",
    },
    views: {
      items: {
        $ref: "#/components/schemas/PrivateViewResponse",
      },
      type: "array",
      title: "Views",
    },
    link: {
      $ref: "#/components/schemas/PrivateShareLinkResponse",
    },
  },
  type: "object",
  required: [
    "id",
    "created_at",
    "updated_at",
    "name",
    "is_public",
    "views",
    "link",
  ],
  title: "PrivateEntryDetailsResponse",
} as const;

export const PrivateShareLinkResponseSchema = {
  properties: {
    id: {
      type: "string",
      format: "uuid4",
      title: "Id",
      examples: ["47c9f759-3b15-4b6c-8b1d-8a22488c084e"],
    },
    is_editable: {
      type: "boolean",
      title: "Is Editable",
    },
    is_active: {
      type: "boolean",
      title: "Is Active",
    },
  },
  type: "object",
  required: ["id", "is_editable", "is_active"],
  title: "PrivateShareLinkResponse",
} as const;

export const PrivateViewResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      title: "Response Model",
      default: "",
    },
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
      examples: ["2025-04-22 20:35:58.840457+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      title: "Updated At",
      examples: ["2025-04-22 20:35:58.840547+00:00"],
    },
    id: {
      type: "string",
      format: "uuid4",
      title: "Id",
      examples: ["47c9f759-3b15-4b6c-8b1d-8a22488c084e"],
    },
    name: {
      type: "string",
      maxLength: 255,
      title: "Name",
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Description",
    },
    thumbnail_url: {
      anyOf: [
        {
          type: "string",
          maxLength: 2083,
        },
        {
          type: "null",
        },
      ],
      title: "Thumbnail Url",
    },
    snapshot_url: {
      anyOf: [
        {
          type: "string",
          maxLength: 2083,
        },
        {
          type: "null",
        },
      ],
      title: "Snapshot Url",
    },
  },
  type: "object",
  required: ["created_at", "updated_at", "id", "name"],
  title: "PrivateViewResponse",
} as const;

export const PublicEntryDetailsResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      title: "Response Model",
      default: "",
    },
    id: {
      type: "string",
      format: "uuid4",
      title: "Id",
      examples: ["47c9f759-3b15-4b6c-8b1d-8a22488c084e"],
    },
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
      examples: ["2025-04-22 20:35:58.840457+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      title: "Updated At",
      examples: ["2025-04-22 20:35:58.840547+00:00"],
    },
    name: {
      type: "string",
      maxLength: 255,
      title: "Name",
      examples: ["Entry Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Description",
      examples: ["Markdown description."],
    },
    thumbnail_url: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Thumbnail Url",
      examples: ["URL for entry thumbnail preview"],
    },
    views: {
      items: {
        $ref: "#/components/schemas/PublicViewResponse",
      },
      type: "array",
      title: "Views",
    },
  },
  type: "object",
  required: ["id", "created_at", "updated_at", "name", "views"],
  title: "PublicEntryDetailsResponse",
} as const;

export const PublicEntryPreviewResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      title: "Response Model",
      default: "",
    },
    id: {
      type: "string",
      format: "uuid4",
      title: "Id",
      examples: ["47c9f759-3b15-4b6c-8b1d-8a22488c084e"],
    },
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
      examples: ["2025-04-22 20:35:58.840457+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      title: "Updated At",
      examples: ["2025-04-22 20:35:58.840547+00:00"],
    },
    name: {
      type: "string",
      maxLength: 255,
      title: "Name",
      examples: ["Entry Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Description",
      examples: ["Markdown description."],
    },
    thumbnail_url: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Thumbnail Url",
      examples: ["URL for entry thumbnail preview"],
    },
  },
  type: "object",
  required: ["id", "created_at", "updated_at", "name"],
  title: "PublicEntryPreviewResponse",
} as const;

export const PublicViewResponseSchema = {
  properties: {
    response_model: {
      type: "string",
      title: "Response Model",
      default: "",
    },
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
      examples: ["2025-04-22 20:35:58.840457+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      title: "Updated At",
      examples: ["2025-04-22 20:35:58.840547+00:00"],
    },
    id: {
      type: "string",
      format: "uuid4",
      title: "Id",
      examples: ["47c9f759-3b15-4b6c-8b1d-8a22488c084e"],
    },
    name: {
      type: "string",
      maxLength: 255,
      title: "Name",
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Description",
    },
    thumbnail_url: {
      anyOf: [
        {
          type: "string",
          maxLength: 2083,
        },
        {
          type: "null",
        },
      ],
      title: "Thumbnail Url",
    },
    snapshot_url: {
      anyOf: [
        {
          type: "string",
          maxLength: 2083,
        },
        {
          type: "null",
        },
      ],
      title: "Snapshot Url",
    },
  },
  type: "object",
  required: ["created_at", "updated_at", "id", "name"],
  title: "PublicViewResponse",
} as const;

export const ShareLinkUpdateRequestSchema = {
  properties: {
    is_editable: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
      title: "Is Editable",
    },
    is_active: {
      anyOf: [
        {
          type: "boolean",
        },
        {
          type: "null",
        },
      ],
      title: "Is Active",
    },
  },
  type: "object",
  title: "ShareLinkUpdateRequest",
} as const;

export const ValidationErrorSchema = {
  properties: {
    loc: {
      items: {
        anyOf: [
          {
            type: "string",
          },
          {
            type: "integer",
          },
        ],
      },
      type: "array",
      title: "Location",
    },
    msg: {
      type: "string",
      title: "Message",
    },
    type: {
      type: "string",
      title: "Error Type",
    },
  },
  type: "object",
  required: ["loc", "msg", "type"],
  title: "ValidationError",
} as const;

export const ViewCreateRequestSchema = {
  properties: {
    name: {
      type: "string",
      maxLength: 255,
      title: "Name",
      examples: ["View Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
          maxLength: 255,
        },
        {
          type: "null",
        },
      ],
      title: "Description",
      examples: ["View Description"],
    },
    snapshot_json: {
      type: "string",
      format: "binary",
      title: "Snapshot Json",
      description: "Mol* state file (.molj file)",
    },
    thumbnail_image: {
      anyOf: [
        {
          type: "string",
          format: "binary",
        },
        {
          type: "null",
        },
      ],
      title: "Thumbnail Image",
      description: "Thumbnail image for view",
    },
  },
  type: "object",
  required: ["name", "snapshot_json"],
  title: "ViewCreateRequest",
} as const;

export const ViewResponseSchema = {
  properties: {
    created_at: {
      type: "string",
      format: "date-time",
      title: "Created At",
      examples: ["2025-04-22 20:35:58.840457+00:00"],
    },
    updated_at: {
      type: "string",
      format: "date-time",
      title: "Updated At",
      examples: ["2025-04-22 20:35:58.840547+00:00"],
    },
    id: {
      type: "string",
      format: "uuid4",
      title: "Id",
      examples: ["47c9f759-3b15-4b6c-8b1d-8a22488c084e"],
    },
    name: {
      type: "string",
      maxLength: 255,
      title: "Name",
    },
    description: {
      anyOf: [
        {
          type: "string",
        },
        {
          type: "null",
        },
      ],
      title: "Description",
    },
    thumbnail_url: {
      anyOf: [
        {
          type: "string",
          maxLength: 2083,
        },
        {
          type: "null",
        },
      ],
      title: "Thumbnail Url",
    },
    snapshot_url: {
      anyOf: [
        {
          type: "string",
          maxLength: 2083,
        },
        {
          type: "null",
        },
      ],
      title: "Snapshot Url",
    },
  },
  type: "object",
  required: ["created_at", "updated_at", "id", "name"],
  title: "ViewResponse",
} as const;

export const ViewUpdateRequestSchema = {
  properties: {
    name: {
      type: "string",
      maxLength: 255,
      title: "Name",
      examples: ["View Name"],
    },
    description: {
      anyOf: [
        {
          type: "string",
          maxLength: 255,
        },
        {
          type: "null",
        },
      ],
      title: "Description",
      examples: ["View Description"],
    },
  },
  type: "object",
  required: ["name"],
  title: "ViewUpdateRequest",
} as const;
