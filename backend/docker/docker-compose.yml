services:
  db:
    container_name: cellim-viewer-db
    image: postgres:17.4-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cellim_viewer
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data/
    networks:
      - cellim-network

  adminer:
    container_name: cellim-viewer-adminer
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
      - ADMINER_DESIGN=cocoa
    depends_on:
      - db
    networks:
      - cellim-network

  minio:
    container_name: cellim-viewer-minio
    image: minio/minio:latest
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    # volumes:
    #   - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - cellim-network

  createbuckets:
    container_name: cellim-viewer-createbuckets
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/cellim-viewer;
      /usr/bin/mc policy set public myminio/cellim-viewer;
      exit 0;
      "
    networks:
      - cellim-network

# volumes:
#  postgres_data:

networks:
  cellim-network:
    driver: bridge
