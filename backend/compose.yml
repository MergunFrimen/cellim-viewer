services:
  db:
    container_name: cellim-viewer-db
    image: postgres:17.4-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cellim_viewer
    networks:
      - cellim-network

  adminer:
    container_name: cellim-viewer-adminer
    image: adminer:latest
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: dracula
    ports:
      - "8080:8080"
    networks:
      - cellim-network
    depends_on:
      - db

  minio:
    container_name: cellim-viewer-minio
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - cellim-network

  createbuckets:
    container_name: cellim-viewer-createbuckets
    image: minio/mc:latest
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/cellim-viewer;
      /usr/bin/mc policy set public myminio/cellim-viewer;
      exit 0;
      "
    networks:
      - cellim-network
    depends_on:
      - minio

  api:
    container_name: cellim-viewer-api
    build: .
    ports:
      - "8000:8000"
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
            - "**/**/__pycache__/"
        - action: rebuild
          path: ./pyproject.toml
    networks:
      - cellim-network
    depends_on:
      - db

networks:
  cellim-network:
    driver: bridge
