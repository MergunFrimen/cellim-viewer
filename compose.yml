services:
  db:
    container_name: cellim-viewer-db
    image: postgres:17.4-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cellim_viewer
    networks:
      - cellim-network

  adminer:
    container_name: cellim-viewer-adminer
    image: adminer:latest
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: dracula
    ports:
      - "8080:8080"
    networks:
      - cellim-network
    depends_on:
      - db

  minio:
    container_name: cellim-viewer-minio
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - cellim-network

  createbuckets:
    container_name: cellim-viewer-createbuckets
    image: minio/mc:latest
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/cellim-viewer;
      /usr/bin/mc policy set public myminio/cellim-viewer;
      exit 0;
      "
    networks:
      - cellim-network
    depends_on:
      - minio

  api:
    container_name: cellim-viewer-api
    build: ./backend/
    ports:
      - "8000:8000"
    develop:
      watch:
        - action: sync
          path: ./backend/
          target: /app/
        - action: rebuild
          path: ./backend/pyproject.toml
    networks:
      - cellim-network
    depends_on:
      - db

  frontend:
    container_name: cellim-viewer-frontend
    build: ./frontend/
    ports:
      - "5173:5173"
    develop:
      watch:
        - action: sync
          path: ./frontend/
          target: /app/
        - action: rebuild
          path: ./frontend/package.json
    networks:
      - cellim-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  # celery_worker:
  #   build: .
  #   command: celery -A app.celery.celery_app worker --loglevel=info
  #   depends_on:
  #     - api
  #     - redis
  #   environment:
  #     - REDIS_URL=redis://redis:6379/0

  # flower:
  #   build: .
  #   command: celery -A app.celery.celery_app flower --port=5555
  #   ports:
  #     - "5555:5555"
  #   depends_on:
  #     - redis
  #     - celery_worker
  #   environment:
  #     - REDIS_URL=redis://redis:6379/0

  # onezone:
  #   image: onedata/onezone:21.02.8
  #   container_name: oz_demo
  #   command: demo
  #   ports:
  #     - "8001:80"
  #     - "8002:443"
  #     - "8003:53"
  #     - "8004:9443"
  #   networks:
  #     - cellim-network

networks:
  cellim-network:
    driver: bridge
